{"version":3,"file":"static/js/90.0b272070.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/pages/Movie/Movie.module.css?8f7f","pages/Movie/Movie.jsx","hooks/useFetchMovie.jsx","services/movie-service.js"],"sourcesContent":["import { Bars } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <>\n      <Bars\n        color=\"#1a5c72\"\n        height={80}\n        width={80}\n        wrapperStyle={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      />\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Movie_wrapper__H-Pt0\",\"infoWrap\":\"Movie_infoWrap__Sav2D\",\"backButton\":\"Movie_backButton__f1nzB\",\"links\":\"Movie_links__qA5I1\",\"link\":\"Movie_link__Qy2eO\"};","import { useFetchMovie } from 'hooks/useFetchMovie';\nimport {\n  Link,\n  useLocation,\n  Navigate,\n  Outlet,\n  // useNavigate,\n} from 'react-router-dom';\n\nimport { Loader } from 'components/Loader/Loader';\nimport { AiFillStar } from 'react-icons/ai';\nimport s from './Movie.module.css';\n\nconst Movie = () => {\n  const location = useLocation();\n  // const navigate = useNavigate();\n  const { movie, loading, error } = useFetchMovie();\n  const {\n    id,\n    title = 'Movie Title',\n    name = 'Movie Title',\n    vote_average = 0,\n    vote_count: voted = 0,\n    overview = 'Overview Text',\n    genres,\n    poster_path: poster,\n    release_date: date = 'Release year',\n  } = movie;\n\n  const goBackLink = location?.state?.from ?? '/';\n  const year = new Date(date).getFullYear();\n\n  return (\n    <>\n      <div>\n        <Link className={s.backButton} to={goBackLink}>\n          Back to movies\n        </Link>\n      </div>\n\n      {loading && <Loader />}\n      {error && <Navigate to=\"/\" replace />}\n      {movie && (\n        <div className={s.wrapper} key={id}>\n          <img\n            src={\n              poster\n                ? `https://image.tmdb.org/t/p/w500${poster}`\n                : 'https://ih1.redbubble.net/image.1027712254.9762/fposter,small,wall_texture,product,750x1000.u2.jpg'\n            }\n            alt={title ? title : name}\n            width=\"300px\"\n          />\n          <div className={s.infoWrap}>\n            <h1>{`${title || name} (${year})`}</h1>\n            <p>\n              <AiFillStar style={{ color: 'orange' }} />{' '}\n              <span style={{ fontWeight: 'bold' }}>\n                {vote_average && vote_average.toFixed(1)}\n              </span>\n              {` (${voted && voted})`}\n            </p>\n            <h2>Overview:</h2>\n            <p>{overview && overview}</p>\n            <h3>Genres</h3>\n            <ul>\n              {genres && genres.map(el => <li key={el.id}>{`${el.name}`}</li>)}\n            </ul>\n          </div>\n        </div>\n      )}\n      <div className={s.links}>\n        <hr />\n        <Link className={s.link} to=\"cast\" state={{ from: goBackLink }}>\n          Cast\n        </Link>\n        <Link className={s.link} to=\"reviews\" state={{ from: goBackLink }}>\n          Reviews\n        </Link>\n      </div>\n      <Outlet />\n    </>\n  );\n};\n\nexport default Movie;\n","import { useEffect, useState } from 'react';\nimport { getMovieDetails } from 'services/movie-service';\nimport { useParams } from 'react-router-dom';\n\nexport const useFetchMovie = () => {\n  const [movie, setMovie] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n    async function getMovie() {\n      try {\n        const data = await getMovieDetails(movieId);\n\n        setMovie(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMovie();\n  }, [movieId]);\n\n  return { movie, loading, error };\n};\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c3dfb97c4e42ba6803ce4a8859444b9b';\n\nexport const fetchMovies = async () => {\n  const { data } = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return data;\n};\n\ngetMovieDetails.propTypes = {\n  movieId: PropTypes.string,\n};\n\ngetMovieCredits.propTypes = {\n  movieId: PropTypes.string,\n};\n\ngetMovieReviews.propTypes = {\n  movieId: PropTypes.string,\n};\n\ngetMovieByQuery.propTypes = {\n  movieId: PropTypes.string,\n};\n"],"names":["Loader","color","height","width","wrapperStyle","position","top","left","transform","location","useLocation","useState","movie","setMovie","loading","setLoading","error","setError","movieId","useParams","useEffect","getMovieDetails","data","getMovie","useFetchMovie","id","title","name","vote_average","vote_count","voted","overview","genres","poster","poster_path","release_date","date","goBackLink","state","from","year","Date","getFullYear","className","s","to","replace","src","alt","style","fontWeight","toFixed","map","el","axios","API_KEY","fetchMovies","getMovieCredits","getMovieReviews","getMovieByQuery","query","propTypes","PropTypes"],"sourceRoot":""}
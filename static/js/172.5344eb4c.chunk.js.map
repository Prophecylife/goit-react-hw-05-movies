{"version":3,"file":"static/js/172.5344eb4c.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/MoviesSearchList/MoviesSearchList.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","pages/MoviesSearch/MoviesSearch.jsx","hooks/useFetchByQuery.jsx","services/movie-service.js"],"sourcesContent":["import { Bars } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <>\n      <Bars\n        color=\"#1a5c72\"\n        height={80}\n        width={80}\n        wrapperStyle={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      />\n    </>\n  );\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport '../MoviesList/MoviesList.css';\nimport { TbMovie } from 'react-icons/tb';\nimport PropTypes from 'prop-types';\n\nexport const MoviesSearchList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, title, name }) => (\n          <li key={id}>\n            <Link to={`${id}`} state={{ from: location }}>\n              <TbMovie />\n              {title || name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMoviesSearchList.propTypes = {\n  movies: PropTypes.array,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchForm_form__o80os\",\"button\":\"SearchForm_button__UXY06\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './SearchForm.module.css';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [input, setInput] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(input);\n  };\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  return (\n    <>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label>\n          <input\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            onChange={handleChange}\n            value={input}\n          />\n        </label>\n        <button className={s.button} type=\"submit\">\n          Search\n        </button>\n      </form>\n    </>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import { MoviesSearchList } from '../../components/MoviesSearchList/MoviesSearchList';\nimport { useFetchByQuery } from 'hooks/useFetchByQuery';\nimport { SearchForm } from '../../components/SearchForm/SearchForm';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MoviesSearch = () => {\n  const { movies, isLoading, onHandleSubmit, error } = useFetchByQuery();\n\n  return (\n    <div>\n      <SearchForm onSubmit={onHandleSubmit} />\n      {error && <p textAlign=\"center\">Your search failed</p>}\n      {isLoading && <Loader />}\n      {movies && <MoviesSearchList movies={movies} />}\n    </div>\n  );\n};\n\nexport default MoviesSearch;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from '../services/movie-service';\n\nexport const useFetchByQuery = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const film = searchParams.get('query');\n    if (!film) return;\n\n    setIsLoading(true);\n    const getMovies = async () => {\n      try {\n        const data = await getMovieByQuery(film.toLowerCase().trim());\n        setMovies(data.results);\n      } catch (error) {\n        setError(error);\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovies();\n  }, [searchParams]);\n\n  const onHandleSubmit = query => {\n    setSearchParams({ query: query });\n    setQuery(searchParams.get('query'));\n  };\n  return { query, movies, error, isLoading, onHandleSubmit };\n};\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c3dfb97c4e42ba6803ce4a8859444b9b';\n\nexport const fetchMovies = async () => {\n  const { data } = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return data;\n};\n\ngetMovieDetails.propTypes = {\n  movieId: PropTypes.string,\n};\n\ngetMovieCredits.propTypes = {\n  movieId: PropTypes.string,\n};\n\ngetMovieReviews.propTypes = {\n  movieId: PropTypes.string,\n};\n\ngetMovieByQuery.propTypes = {\n  movieId: PropTypes.string,\n};\n"],"names":["Loader","color","height","width","wrapperStyle","position","top","left","transform","MoviesSearchList","movies","location","useLocation","map","id","title","name","to","state","from","SearchForm","onSubmit","useState","input","setInput","className","s","e","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","target","value","query","setQuery","setMovies","error","setError","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","useEffect","film","get","getMovies","getMovieByQuery","toLowerCase","trim","data","results","console","log","onHandleSubmit","useFetchByQuery","textAlign","axios","API_KEY","fetchMovies","getMovieDetails","movieId","getMovieCredits","getMovieReviews","propTypes","PropTypes"],"sourceRoot":""}
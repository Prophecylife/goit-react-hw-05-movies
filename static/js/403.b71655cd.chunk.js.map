{"version":3,"file":"static/js/403.b71655cd.chunk.js","mappings":"iMAEaA,EAAS,WACpB,OACE,+BACE,SAAC,KAAD,CACEC,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,aAAc,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,4BAKpB,C,iFClBc,SAASC,IACtB,OAAO,0CACR,C,iICGYC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACV,yBACE,UAAC,KAAD,CAAMC,GAAE,gBAAWH,GAAMI,MAAO,CAAEC,KAAMR,GAAxC,WACE,SAAC,MAAD,IACCI,GAASC,MAHLF,EADC,OAWnB,E,oECFD,EAda,WACX,MCJ4B,WAC5B,OAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,8GAEuBC,EAAAA,EAAAA,MAFvB,OAEUC,EAFV,OAGIP,EAAUO,EAAKC,SAHnB,gDAKIJ,EAAS,EAAD,IALZ,yBAOIF,GAAW,GAPf,6EAFc,sBACdA,GAAW,GADG,mCAYdO,EACD,GAAE,IACI,CAAEpB,OAAAA,EAAQc,MAAAA,EAAOF,QAAAA,EACzB,CDhBoCS,GAA3BrB,EAAR,EAAQA,OAAQc,EAAhB,EAAgBA,MAAOF,EAAvB,EAAuBA,QACvB,OACE,2BACGA,IAAW,SAACvB,EAAA,EAAD,KACZ,uCACW,SAAC,MAAD,IADX,aAGA,SAAC,EAAD,CAAYW,OAAQA,IACnBc,IAAS,SAAChB,EAAA,QAAD,MAGf,C,+NEfDwB,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHN,EAAW,mCAAG,sGACFK,IAAAA,IAAA,mCAAsCC,IADpC,uBACjBL,EADiB,EACjBA,KADiB,kBAGlBA,GAHkB,2CAAH,qDAMXM,EAAe,mCAAG,WAAMC,GAAN,yFACNH,IAAAA,IAAA,gBAAmBG,EAAnB,oBAAsCF,IADhC,uBACrBL,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAMfQ,EAAe,mCAAG,WAAMD,GAAN,yFACNH,IAAAA,IAAA,gBACZG,EADY,4BACeF,IAFT,uBACrBL,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfS,EAAe,mCAAG,WAAMF,GAAN,yFACNH,IAAAA,IAAA,gBACZG,EADY,4BACeF,IAFT,uBACrBL,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfU,EAAe,mCAAG,WAAMC,GAAN,yFACNP,IAAAA,IAAA,+BACGC,EADH,kBACoBM,IAFd,uBACrBX,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAO5BM,EAAgBM,UAAY,CAC1BL,QAASM,IAAAA,QAGXL,EAAgBI,UAAY,CAC1BL,QAASM,IAAAA,QAGXJ,EAAgBG,UAAY,CAC1BL,QAASM,IAAAA,QAGXH,EAAgBE,UAAY,CAC1BL,QAASM,IAAAA,O","sources":["components/Loader/Loader.jsx","components/NotFound/NotFound.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx","hooks/useFetchMovies.jsx","services/movie-service.js"],"sourcesContent":["import { Bars } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <>\n      <Bars\n        color=\"#1a5c72\"\n        height={80}\n        width={80}\n        wrapperStyle={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      />\n    </>\n  );\n};\n","export default function NotFound() {\n  return <h1>Page not found</h1>;\n}\n","import { Link, useLocation } from 'react-router-dom';\nimport './MoviesList.css';\nimport { TbMovie } from 'react-icons/tb';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, title, name }) => (\n          <li key={id}>\n            <Link to={`movie/${id}`} state={{ from: location }}>\n              <TbMovie />\n              {title || name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array,\n};\n","import { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport NotFound from 'components/NotFound/NotFound';\nimport { useFetchMovies } from 'hooks/useFetchMovies';\nimport { TbMovie } from 'react-icons/tb';\n\nconst Home = () => {\n  const { movies, error, loading } = useFetchMovies();\n  return (\n    <div>\n      {loading && <Loader />}\n      <h1>\n        Trending <TbMovie /> today\n      </h1>\n      <MoviesList movies={movies} />\n      {error && <NotFound />}\n    </div>\n  );\n};\n\nexport default Home;\n","import { useState, useEffect } from 'react';\nimport { fetchMovies } from 'services/movie-service';\n\nexport const useFetchMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    async function getMovies() {\n      try {\n        const data = await fetchMovies();\n        setMovies(data.results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMovies();\n  }, []);\n  return { movies, error, loading };\n};\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c3dfb97c4e42ba6803ce4a8859444b9b';\n\nexport const fetchMovies = async () => {\n  const { data } = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return data;\n};\n\ngetMovieDetails.propTypes = {\n  movieId: PropTypes.string,\n};\n\ngetMovieCredits.propTypes = {\n  movieId: PropTypes.string,\n};\n\ngetMovieReviews.propTypes = {\n  movieId: PropTypes.string,\n};\n\ngetMovieByQuery.propTypes = {\n  movieId: PropTypes.string,\n};\n"],"names":["Loader","color","height","width","wrapperStyle","position","top","left","transform","NotFound","MoviesList","movies","location","useLocation","map","id","title","name","to","state","from","useState","setMovies","loading","setLoading","error","setError","useEffect","fetchMovies","data","results","getMovies","useFetchMovies","axios","API_KEY","getMovieDetails","movieId","getMovieCredits","getMovieReviews","getMovieByQuery","query","propTypes","PropTypes"],"sourceRoot":""}